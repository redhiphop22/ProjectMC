// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace protocol
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct ENTITY_SPAWN_S2C : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static ENTITY_SPAWN_S2C GetRootAsENTITY_SPAWN_S2C(ByteBuffer _bb) { return GetRootAsENTITY_SPAWN_S2C(_bb, new ENTITY_SPAWN_S2C()); }
  public static ENTITY_SPAWN_S2C GetRootAsENTITY_SPAWN_S2C(ByteBuffer _bb, ENTITY_SPAWN_S2C obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ENTITY_SPAWN_S2C __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public common.ENTITY_SPAWN_INFO? Entity(int j) { int o = __p.__offset(4); return o != 0 ? (common.ENTITY_SPAWN_INFO?)(new common.ENTITY_SPAWN_INFO()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int EntityLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<protocol.ENTITY_SPAWN_S2C> CreateENTITY_SPAWN_S2C(FlatBufferBuilder builder,
      VectorOffset entityOffset = default(VectorOffset)) {
    builder.StartTable(1);
    ENTITY_SPAWN_S2C.AddEntity(builder, entityOffset);
    return ENTITY_SPAWN_S2C.EndENTITY_SPAWN_S2C(builder);
  }

  public static void StartENTITY_SPAWN_S2C(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddEntity(FlatBufferBuilder builder, VectorOffset entityOffset) { builder.AddOffset(0, entityOffset.Value, 0); }
  public static VectorOffset CreateEntityVector(FlatBufferBuilder builder, Offset<common.ENTITY_SPAWN_INFO>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateEntityVectorBlock(FlatBufferBuilder builder, Offset<common.ENTITY_SPAWN_INFO>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartEntityVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<protocol.ENTITY_SPAWN_S2C> EndENTITY_SPAWN_S2C(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<protocol.ENTITY_SPAWN_S2C>(o);
  }
};


}
